name: Workflow for CI and Codecov Action
on: [push, pull_request]
jobs:
  run:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    env:
      OS: ${{ matrix.os }}
      PYTHON: "3.10"
    steps:
    - uses: actions/checkout@v4
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
          pip install pdoc3
          pip install pytest
          pip install pytest-cov
          pip install -e .
    - name: Update documentation
      run: |
        pdoc --html pearl.action_representation_modules --output-dir html --force
        pdoc --html pearl.api --output-dir html --force
        pdoc --html pearl.history_summarization_modules --output-dir html --force
        pdoc --html pearl.neural_networks.common --output-dir html --force
        pdoc --html pearl.neural_networks.contextual_bandit --output-dir html --force
        pdoc --html pearl.neural_networks.sequential_decision_making.actor_networks --output-dir html --force
        pdoc --html pearl.neural_networks.sequential_decision_making.q_value_networks --output-dir html --force
        pdoc --html pearl.policy_learners --output-dir html --force
        pdoc --html pearl.replay_buffers.examples --output-dir html --force
        pdoc --html pearl.replay_buffers.sequential_decision_making.bootstrap_replay_buffer --output-dir html --force
        pdoc --html pearl.replay_buffers.sequential_decision_making.sarsa_replay_buffer --output-dir html --force
        pdoc --html pearl.replay_buffers.basic_replay_buffer --output-dir html --force
        pdoc --html pearl.replay_buffers.replay_buffer --output-dir html --force
        pdoc --html pearl.replay_buffers.tensor_based_replay_buffer --output-dir html --force
        pdoc --html pearl.replay_buffers.transition --output-dir html --force
        pdoc --html pearl.safety_modules --output-dir html --force
        pdoc --html pearl.user_envs --output-dir html --force
        pdoc --html pearl.utils --output-dir html --force
        pdoc --html pearl.pearl_agent --output-dir html --force

    - name: Upload docs artifacts
      uses: actions/upload-artifact@v4
      with:
        # Name of the artifact to upload.
        # Optional. Default is 'artifact'
        name: artifact

        # A file, directory or wildcard pattern that describes what to upload
        # Required.
        path: html/

        # The desired behavior if no files are found using the provided path.
        # Available Options:
        #   warn: Output a warning but do not fail the action
        #   error: Fail the action with an error message
        #   ignore: Do not output any warnings or errors, the action does not fail
        # Optional. Default is 'warn'
        if-no-files-found: warn

        # If true, an artifact with a matching name will be deleted before a new one is uploaded.
        # If false, the action will fail if an artifact for the given name already exists.
        # Does not fail if the artifact does not exist.
        # Optional. Default is 'false'
        overwrite: true
    - name: Generate coverage report
      run: |
        pytest --cov=./ --cov-report=xml
    - name: Upload coverage to Codecov
      if: success() || failure()
      uses: codecov/codecov-action@v4
      with:
        env_vars: OS,PYTHON
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        token: ${{ secrets.CODECOV_TOKEN }}
        slug: facebookresearch/Pearl
        verbose: true
