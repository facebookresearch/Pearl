{
    "filename": "chgrp",
    "script": "; benchmark generated from python API\n(set-info :status unknown)\n(declare-fun unconstrained_ret_mbrtowc_2920_64 () (_ BitVec 64))\n(declare-fun unconstrained_ret_mbrtowc_3025_64 () (_ BitVec 64))\n(declare-fun unconstrained_ret_mbrtowc_2827_64 () (_ BitVec 64))\n(declare-fun sym_argv_0_80 () (_ BitVec 80))\n(declare-fun strlen_2812_64 () (_ BitVec 64))\n(assert\n (let (($x70238 (= (_ bv0 64) unconstrained_ret_mbrtowc_2920_64)))\n (not $x70238)))\n(assert\n (let (($x8317 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_2920_64)))\n (not $x8317)))\n(assert\n (let (($x29658 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_2920_64)))\n (not $x29658)))\n(assert\n (let (($x63307 (= (_ bv0 64) unconstrained_ret_mbrtowc_3025_64)))\n (not $x63307)))\n(assert\n (let (($x5703 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_3025_64)))\n (not $x5703)))\n(assert\n (let (($x6484 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_3025_64)))\n (not $x6484)))\n(assert\n (let (($x48370 (= (_ bv0 64) unconstrained_ret_mbrtowc_2827_64)))\n (not $x48370)))\n(assert\n (let (($x42025 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_2827_64)))\n (not $x42025)))\n(assert\n (let (($x53723 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_2827_64)))\n (not $x53723)))\n(assert\n (let ((?x208 ((_ extract 55 55) sym_argv_0_80)))\n (= (_ bv0 1) ?x208)))\n(assert\n (let ((?x218 ((_ extract 47 47) sym_argv_0_80)))\n (= (_ bv0 1) ?x218)))\n(assert\n (let ((?x440 ((_ extract 39 39) sym_argv_0_80)))\n (= (_ bv0 1) ?x440)))\n(assert\n (let ((?x450 ((_ extract 31 31) sym_argv_0_80)))\n (= (_ bv0 1) ?x450)))\n(assert\n (let ((?x350 ((_ extract 23 23) sym_argv_0_80)))\n (= (_ bv0 1) ?x350)))\n(assert\n (let ((?x341 ((_ extract 15 15) sym_argv_0_80)))\n (= (_ bv0 1) ?x341)))\n(assert\n (let ((?x234 ((_ extract 7 7) sym_argv_0_80)))\n (= (_ bv0 1) ?x234)))\n(assert\n (let ((?x210 ((_ extract 54 48) sym_argv_0_80)))\n (bvule ?x210 (_ bv126 7))))\n(assert\n (let ((?x268 ((_ extract 46 40) sym_argv_0_80)))\n (bvule ?x268 (_ bv126 7))))\n(assert\n (let ((?x442 ((_ extract 38 32) sym_argv_0_80)))\n (bvule ?x442 (_ bv126 7))))\n(assert\n (let ((?x452 ((_ extract 30 24) sym_argv_0_80)))\n (bvule ?x452 (_ bv126 7))))\n(assert\n (let ((?x330 ((_ extract 22 16) sym_argv_0_80)))\n (bvule ?x330 (_ bv126 7))))\n(assert\n (let ((?x221 ((_ extract 14 8) sym_argv_0_80)))\n (bvule ?x221 (_ bv126 7))))\n(assert\n (let ((?x408 ((_ extract 6 0) sym_argv_0_80)))\n (bvule ?x408 (_ bv126 7))))\n(assert\n (let ((?x16 ((_ extract 79 72) sym_argv_0_80)))\n (= (_ bv13 8) ?x16)))\n(assert\n (let ((?x24 ((_ extract 71 64) sym_argv_0_80)))\n (= (_ bv39 8) ?x24)))\n(assert\n (let ((?x7728 ((_ extract 61 56) sym_argv_0_80)))\n (let (($x32969 (bvule ?x7728 (_ bv39 6))))\n (let ((?x13895 ((_ extract 63 62) sym_argv_0_80)))\n (let (($x13266 (= (_ bv0 2) ?x13895)))\n (let (($x37585 (and $x13266 $x32969)))\n (let ((?x45185 (ite $x37585 (_ bv2 8) (_ bv1 8))))\n (let (($x29222 (= (_ bv0 8) ?x45185)))\n (not $x29222)))))))))\n(assert\n (let ((?x18 ((_ extract 63 56) sym_argv_0_80)))\n (= (_ bv64 8) ?x18)))\n(assert\n (let ((?x61128 (bvadd (_ bv576460752303357896 64) strlen_2812_64)))\n (let ((?x35 ((_ extract 7 0) sym_argv_0_80)))\n (let (($x19266 (= (_ bv0 8) ?x35)))\n (let ((?x64858 (ite $x19266 (_ bv576460752303357905 64) (_ bv576460752303357906 64))))\n (let ((?x19 ((_ extract 15 8) sym_argv_0_80)))\n (let (($x36231 (= (_ bv0 8) ?x19)))\n (let ((?x51220 (ite $x36231 (_ bv576460752303357904 64) ?x64858)))\n (let ((?x21 ((_ extract 23 16) sym_argv_0_80)))\n (let (($x53957 (= (_ bv0 8) ?x21)))\n (let ((?x9503 (ite $x53957 (_ bv576460752303357903 64) ?x51220)))\n (let ((?x23 ((_ extract 31 24) sym_argv_0_80)))\n (let (($x1890 (= (_ bv0 8) ?x23)))\n (let ((?x61769 (ite $x1890 (_ bv576460752303357902 64) ?x9503)))\n (let ((?x27 ((_ extract 39 32) sym_argv_0_80)))\n (let (($x15567 (= (_ bv0 8) ?x27)))\n (let ((?x32633 (ite $x15567 (_ bv576460752303357901 64) ?x61769)))\n (let ((?x29 ((_ extract 47 40) sym_argv_0_80)))\n (let (($x4974 (= (_ bv0 8) ?x29)))\n (let ((?x39938 (ite $x4974 (_ bv576460752303357900 64) ?x32633)))\n (let ((?x31 ((_ extract 55 48) sym_argv_0_80)))\n (let (($x20892 (= (_ bv0 8) ?x31)))\n (let ((?x62203 (ite $x20892 (_ bv576460752303357899 64) ?x39938)))\n (= ?x62203 ?x61128))))))))))))))))))))))))\n(assert\n (let ((?x26165 (bvadd (_ bv2 64) unconstrained_ret_mbrtowc_2827_64)))\n (let ((?x67843 (bvadd ?x26165 unconstrained_ret_mbrtowc_2920_64)))\n (let ((?x75556 (bvadd ?x67843 unconstrained_ret_mbrtowc_3025_64)))\n (let (($x8600 (bvule strlen_2812_64 ?x75556)))\n (not $x8600))))))\n(assert\n (let ((?x20505 (bvadd (_ bv576460752303357898 64) unconstrained_ret_mbrtowc_2827_64)))\n (let ((?x31521 (bvadd ?x20505 unconstrained_ret_mbrtowc_2920_64)))\n (let ((?x8854 (bvadd ?x31521 unconstrained_ret_mbrtowc_3025_64)))\n (bvule (_ bv576460752303357896 64) ?x8854)))))\n(assert\n (let ((?x20505 (bvadd (_ bv576460752303357898 64) unconstrained_ret_mbrtowc_2827_64)))\n (let ((?x31521 (bvadd ?x20505 unconstrained_ret_mbrtowc_2920_64)))\n (let ((?x8854 (bvadd ?x31521 unconstrained_ret_mbrtowc_3025_64)))\n (let ((?x69238 ((_ extract 63 59) ?x8854)))\n (= (_ bv0 5) ?x69238))))))\n(assert\n (let ((?x85081 ((_ extract 58 0) unconstrained_ret_mbrtowc_3025_64)))\n (let ((?x77083 ((_ extract 58 0) unconstrained_ret_mbrtowc_2920_64)))\n (let ((?x63322 ((_ extract 58 0) unconstrained_ret_mbrtowc_2827_64)))\n (let ((?x27161 (bvadd (_ bv576460752303357898 59) ?x63322)))\n (let ((?x38664 (bvadd ?x27161 ?x77083)))\n (let ((?x85852 (bvadd ?x38664 ?x85081)))\n (bvule ?x85852 (_ bv576460752303357905 59)))))))))\n(assert\n (let ((?x60010 (bvadd unconstrained_ret_mbrtowc_2827_64 unconstrained_ret_mbrtowc_2920_64)))\n (let ((?x20756 (bvadd ?x60010 unconstrained_ret_mbrtowc_3025_64)))\n (let ((?x84171 (bvadd ?x20756 (_ bv576460752303357898 64))))\n (let (($x55587 (and (distinct (_ bv576460752303357901 64) ?x84171) true)))\n (let (($x51991 (and (distinct (_ bv576460752303357900 64) ?x84171) true)))\n (let (($x24517 (and (distinct (_ bv576460752303357905 64) ?x84171) true)))\n (let (($x20498 (and (distinct (_ bv576460752303357904 64) ?x84171) true)))\n (let (($x80861 (and (distinct (_ bv576460752303357898 64) ?x84171) true)))\n (let (($x6612 (and (distinct (_ bv576460752303357896 64) ?x84171) true)))\n (and $x6612 $x80861 $x20498 $x24517 $x51991 $x55587)))))))))))\n(assert\n (let ((?x60010 (bvadd unconstrained_ret_mbrtowc_2827_64 unconstrained_ret_mbrtowc_2920_64)))\n (let ((?x20756 (bvadd ?x60010 unconstrained_ret_mbrtowc_3025_64)))\n (let ((?x84171 (bvadd ?x20756 (_ bv576460752303357898 64))))\n (and (distinct ?x84171 (_ bv576460752303357899 64)) true)))))\n(assert\n (let ((?x60010 (bvadd unconstrained_ret_mbrtowc_2827_64 unconstrained_ret_mbrtowc_2920_64)))\n (let ((?x20756 (bvadd ?x60010 unconstrained_ret_mbrtowc_3025_64)))\n (let ((?x84171 (bvadd ?x20756 (_ bv576460752303357898 64))))\n (and (distinct ?x84171 (_ bv576460752303357903 64)) true)))))\n(assert\n (let ((?x60010 (bvadd unconstrained_ret_mbrtowc_2827_64 unconstrained_ret_mbrtowc_2920_64)))\n (let ((?x20756 (bvadd ?x60010 unconstrained_ret_mbrtowc_3025_64)))\n (let ((?x84171 (bvadd ?x20756 (_ bv576460752303357898 64))))\n (and (distinct ?x84171 (_ bv576460752303357902 64)) true)))))\n(assert\n (let ((?x60010 (bvadd unconstrained_ret_mbrtowc_2827_64 unconstrained_ret_mbrtowc_2920_64)))\n (let ((?x20756 (bvadd ?x60010 unconstrained_ret_mbrtowc_3025_64)))\n (let ((?x84171 (bvadd ?x20756 (_ bv576460752303357898 64))))\n (and (distinct ?x84171 (_ bv576460752303357897 64)) true)))))\n(check-sat)\n",
    "time": 81.12636375427246,
    "stamp": "time.struct_time(tm_year=2020, tm_mon=12, tm_mday=1, tm_hour=21, tm_min=43, tm_sec=6, tm_wday=1, tm_yday=336, tm_isdst=0)",
    "solving_time_dic": {
        "z3": [
            18.846025228500366
        ]
    }
}