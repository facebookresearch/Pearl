{
    "filename": "chgrp",
    "script": "; benchmark generated from python API\n(set-info :status unknown)\n(declare-fun unconstrained_ret_mbrtowc_14265_64 () (_ BitVec 64))\n(declare-fun unconstrained_ret_mbrtowc_14045_64 () (_ BitVec 64))\n(declare-fun unconstrained_ret_mbrtowc_14407_64 () (_ BitVec 64))\n(declare-fun unconstrained_ret_mbrtowc_14545_64 () (_ BitVec 64))\n(declare-fun mem_fffffffff32fdfb0_3612_64 () (_ BitVec 64))\n(assert\n (let (($x347513 (= (_ bv0 64) unconstrained_ret_mbrtowc_14265_64)))\n (not $x347513)))\n(assert\n (let (($x326840 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_14265_64)))\n (not $x326840)))\n(assert\n (let (($x264768 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_14265_64)))\n (not $x264768)))\n(assert\n (let (($x362305 (= (_ bv0 64) unconstrained_ret_mbrtowc_14045_64)))\n (not $x362305)))\n(assert\n (let (($x382034 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_14045_64)))\n (not $x382034)))\n(assert\n (let (($x328451 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_14045_64)))\n (not $x328451)))\n(assert\n (let (($x335594 (= (_ bv0 64) unconstrained_ret_mbrtowc_14407_64)))\n (not $x335594)))\n(assert\n (let (($x374340 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_14407_64)))\n (not $x374340)))\n(assert\n (let (($x406774 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_14407_64)))\n (not $x406774)))\n(assert\n (let (($x329699 (= (_ bv0 64) unconstrained_ret_mbrtowc_14545_64)))\n (not $x329699)))\n(assert\n (let (($x325519 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_14545_64)))\n (not $x325519)))\n(assert\n (let (($x380196 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_14545_64)))\n (not $x380196)))\n(assert\n (let ((?x279603 (bvadd unconstrained_ret_mbrtowc_14045_64 unconstrained_ret_mbrtowc_14265_64)))\n (let ((?x378342 (bvadd ?x279603 unconstrained_ret_mbrtowc_14407_64)))\n (let ((?x341819 (bvadd ?x378342 unconstrained_ret_mbrtowc_14545_64)))\n (let (($x277824 (bvule (_ bv8 64) ?x341819)))\n (not $x277824))))))\n(assert\n (= (_ bv0 64) mem_fffffffff32fdfb0_3612_64))\n(assert\n (let ((?x333618 (bvadd (bvadd mem_fffffffff32fdfb0_3612_64 unconstrained_ret_mbrtowc_14045_64) unconstrained_ret_mbrtowc_14265_64)))\n (let ((?x210125 (bvadd ?x333618 unconstrained_ret_mbrtowc_14407_64)))\n (let ((?x407173 (bvadd ?x210125 unconstrained_ret_mbrtowc_14545_64)))\n (let (($x325695 (and (distinct (_ bv7 64) ?x407173) true)))\n (let (($x378860 (and (distinct (_ bv6 64) ?x407173) true)))\n (let (($x416565 (and (distinct (_ bv4 64) ?x407173) true)))\n (let (($x338430 (and (distinct (_ bv2 64) ?x407173) true)))\n (let (($x290745 (and (distinct (_ bv0 64) ?x407173) true)))\n (and $x290745 $x338430 $x416565 $x378860 $x325695))))))))))\n(assert\n (let ((?x333618 (bvadd (bvadd mem_fffffffff32fdfb0_3612_64 unconstrained_ret_mbrtowc_14045_64) unconstrained_ret_mbrtowc_14265_64)))\n (let ((?x210125 (bvadd ?x333618 unconstrained_ret_mbrtowc_14407_64)))\n (let ((?x407173 (bvadd ?x210125 unconstrained_ret_mbrtowc_14545_64)))\n (and (distinct ?x407173 (_ bv5 64)) true)))))\n(assert\n (let ((?x333618 (bvadd (bvadd mem_fffffffff32fdfb0_3612_64 unconstrained_ret_mbrtowc_14045_64) unconstrained_ret_mbrtowc_14265_64)))\n (let ((?x210125 (bvadd ?x333618 unconstrained_ret_mbrtowc_14407_64)))\n (let ((?x407173 (bvadd ?x210125 unconstrained_ret_mbrtowc_14545_64)))\n (and (distinct ?x407173 (_ bv1 64)) true)))))\n(assert\n (let ((?x333618 (bvadd (bvadd mem_fffffffff32fdfb0_3612_64 unconstrained_ret_mbrtowc_14045_64) unconstrained_ret_mbrtowc_14265_64)))\n (let ((?x210125 (bvadd ?x333618 unconstrained_ret_mbrtowc_14407_64)))\n (let ((?x407173 (bvadd ?x210125 unconstrained_ret_mbrtowc_14545_64)))\n (and (distinct ?x407173 (_ bv3 64)) true)))))\n(check-sat)\n",
    "time": 100.00037503242493,
    "stamp": "time.struct_time(tm_year=2020, tm_mon=12, tm_mday=2, tm_hour=6, tm_min=31, tm_sec=46, tm_wday=2, tm_yday=337, tm_isdst=0)",
    "solving_time_dic": {
        "z3": [
            300.0082309246063
        ]
    }
}