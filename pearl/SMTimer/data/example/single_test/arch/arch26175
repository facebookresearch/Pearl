{
    "filename": "arch",
    "script": "; benchmark generated from python API\n(set-info :status unknown)\n(declare-fun unconstrained_ret_mbrtowc_968_64 () (_ BitVec 64))\n(declare-fun sym_argv_0_80 () (_ BitVec 80))\n(declare-fun strlen_837_64 () (_ BitVec 64))\n(declare-fun unconstrained_ret_mbrtowc_901_64 () (_ BitVec 64))\n(declare-fun unconstrained_ret_mbrtowc_846_64 () (_ BitVec 64))\n(assert\n (let (($x2008 (= (_ bv0 64) unconstrained_ret_mbrtowc_968_64)))\n (not $x2008)))\n(assert\n (let (($x16065 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_968_64)))\n (not $x16065)))\n(assert\n (let (($x7489 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_968_64)))\n (not $x7489)))\n(assert\n (let ((?x260 ((_ extract 47 47) sym_argv_0_80)))\n (= (_ bv0 1) ?x260)))\n(assert\n (let ((?x339 ((_ extract 39 39) sym_argv_0_80)))\n (= (_ bv0 1) ?x339)))\n(assert\n (let ((?x301 ((_ extract 31 31) sym_argv_0_80)))\n (= (_ bv0 1) ?x301)))\n(assert\n (let ((?x342 ((_ extract 23 23) sym_argv_0_80)))\n (= (_ bv0 1) ?x342)))\n(assert\n (let ((?x424 ((_ extract 15 15) sym_argv_0_80)))\n (= (_ bv0 1) ?x424)))\n(assert\n (let ((?x372 ((_ extract 7 7) sym_argv_0_80)))\n (= (_ bv0 1) ?x372)))\n(assert\n (let ((?x345 ((_ extract 46 40) sym_argv_0_80)))\n (bvule ?x345 (_ bv126 7))))\n(assert\n (let ((?x313 ((_ extract 38 32) sym_argv_0_80)))\n (bvule ?x313 (_ bv126 7))))\n(assert\n (let ((?x353 ((_ extract 30 24) sym_argv_0_80)))\n (bvule ?x353 (_ bv126 7))))\n(assert\n (let ((?x406 ((_ extract 22 16) sym_argv_0_80)))\n (bvule ?x406 (_ bv126 7))))\n(assert\n (let ((?x336 ((_ extract 14 8) sym_argv_0_80)))\n (bvule ?x336 (_ bv126 7))))\n(assert\n (let ((?x415 ((_ extract 6 0) sym_argv_0_80)))\n (bvule ?x415 (_ bv126 7))))\n(assert\n (let ((?x16 ((_ extract 79 72) sym_argv_0_80)))\n (= (_ bv12 8) ?x16)))\n(assert\n (let ((?x893 ((_ extract 69 64) sym_argv_0_80)))\n (let (($x2149 (bvule ?x893 (_ bv39 6))))\n (let ((?x634 ((_ extract 71 70) sym_argv_0_80)))\n (let (($x2195 (= (_ bv0 2) ?x634)))\n (let (($x1951 (and $x2195 $x2149)))\n (let ((?x3329 (ite $x1951 (_ bv2 8) (_ bv1 8))))\n (let (($x1661 (= (_ bv0 8) ?x3329)))\n (not $x1661)))))))))\n(assert\n (let ((?x24 ((_ extract 71 64) sym_argv_0_80)))\n (= (_ bv65 8) ?x24)))\n(assert\n (let ((?x18 ((_ extract 63 56) sym_argv_0_80)))\n (= (_ bv12 8) ?x18)))\n(assert\n (let ((?x15668 ((_ extract 53 48) sym_argv_0_80)))\n (let (($x15108 (bvule ?x15668 (_ bv39 6))))\n (let ((?x15714 ((_ extract 55 54) sym_argv_0_80)))\n (let (($x5934 (= (_ bv0 2) ?x15714)))\n (let (($x7590 (and $x5934 $x15108)))\n (let ((?x970 (ite $x7590 (_ bv2 8) (_ bv1 8))))\n (let (($x15891 (= (_ bv0 8) ?x970)))\n (not $x15891)))))))))\n(assert\n (let ((?x31 ((_ extract 55 48) sym_argv_0_80)))\n (= (_ bv64 8) ?x31)))\n(assert\n (let ((?x23331 (bvadd (_ bv576460752303357895 64) strlen_837_64)))\n (let ((?x35 ((_ extract 7 0) sym_argv_0_80)))\n (let (($x597 (= (_ bv0 8) ?x35)))\n (let ((?x1880 (ite $x597 (_ bv576460752303357904 64) (_ bv576460752303357905 64))))\n (let ((?x19 ((_ extract 15 8) sym_argv_0_80)))\n (let (($x315 (= (_ bv0 8) ?x19)))\n (let ((?x459 (ite $x315 (_ bv576460752303357903 64) ?x1880)))\n (let ((?x21 ((_ extract 23 16) sym_argv_0_80)))\n (let (($x1644 (= (_ bv0 8) ?x21)))\n (let ((?x979 (ite $x1644 (_ bv576460752303357902 64) ?x459)))\n (let ((?x23 ((_ extract 31 24) sym_argv_0_80)))\n (let (($x2185 (= (_ bv0 8) ?x23)))\n (let ((?x1878 (ite $x2185 (_ bv576460752303357901 64) ?x979)))\n (let ((?x27 ((_ extract 39 32) sym_argv_0_80)))\n (let (($x515 (= (_ bv0 8) ?x27)))\n (let ((?x1879 (ite $x515 (_ bv576460752303357900 64) ?x1878)))\n (let ((?x29 ((_ extract 47 40) sym_argv_0_80)))\n (let (($x2186 (= (_ bv0 8) ?x29)))\n (let ((?x1783 (ite $x2186 (_ bv576460752303357899 64) ?x1879)))\n (= ?x1783 ?x23331)))))))))))))))))))))\n(assert\n (let (($x27059 (= (_ bv0 64) unconstrained_ret_mbrtowc_901_64)))\n (not $x27059)))\n(assert\n (let (($x11008 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_901_64)))\n (not $x11008)))\n(assert\n (let (($x19656 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_901_64)))\n (not $x19656)))\n(assert\n (let (($x9734 (= (_ bv0 64) unconstrained_ret_mbrtowc_846_64)))\n (not $x9734)))\n(assert\n (let (($x24928 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_846_64)))\n (not $x24928)))\n(assert\n (let (($x16613 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_846_64)))\n (not $x16613)))\n(assert\n (let ((?x9986 (bvadd (_ bv3 64) unconstrained_ret_mbrtowc_846_64)))\n (let ((?x12919 (bvadd ?x9986 unconstrained_ret_mbrtowc_901_64)))\n (let ((?x11432 (bvadd ?x12919 unconstrained_ret_mbrtowc_968_64)))\n (let (($x41671 (bvule strlen_837_64 ?x11432)))\n (not $x41671))))))\n(assert\n (let ((?x25751 (bvadd (_ bv576460752303357898 64) unconstrained_ret_mbrtowc_846_64)))\n (let ((?x26459 (bvadd ?x25751 unconstrained_ret_mbrtowc_901_64)))\n (let ((?x19175 (bvadd ?x26459 unconstrained_ret_mbrtowc_968_64)))\n (bvule (_ bv576460752303357895 64) ?x19175)))))\n(assert\n (let ((?x25751 (bvadd (_ bv576460752303357898 64) unconstrained_ret_mbrtowc_846_64)))\n (let ((?x26459 (bvadd ?x25751 unconstrained_ret_mbrtowc_901_64)))\n (let ((?x19175 (bvadd ?x26459 unconstrained_ret_mbrtowc_968_64)))\n (let ((?x71088 ((_ extract 63 59) ?x19175)))\n (= (_ bv0 5) ?x71088))))))\n(assert\n (let ((?x24786 ((_ extract 58 0) unconstrained_ret_mbrtowc_968_64)))\n (let ((?x27015 ((_ extract 58 0) unconstrained_ret_mbrtowc_901_64)))\n (let ((?x2980 ((_ extract 58 0) unconstrained_ret_mbrtowc_846_64)))\n (let ((?x28642 (bvadd (_ bv576460752303357898 59) ?x2980)))\n (let ((?x9142 (bvadd ?x28642 ?x27015)))\n (let ((?x37678 (bvadd ?x9142 ?x24786)))\n (bvule ?x37678 (_ bv576460752303357904 59)))))))))\n(assert\n (let ((?x16001 (bvadd unconstrained_ret_mbrtowc_846_64 unconstrained_ret_mbrtowc_901_64)))\n (let ((?x8327 (bvadd ?x16001 unconstrained_ret_mbrtowc_968_64)))\n (let ((?x45483 (bvadd ?x8327 (_ bv576460752303357898 64))))\n (let (($x59529 (and (distinct (_ bv576460752303357899 64) ?x45483) true)))\n (let (($x3673 (and (distinct (_ bv576460752303357904 64) ?x45483) true)))\n (let (($x59082 (and (distinct (_ bv576460752303357898 64) ?x45483) true)))\n (let (($x45229 (and (distinct (_ bv576460752303357895 64) ?x45483) true)))\n (and $x45229 $x59082 $x3673 $x59529)))))))))\n(assert\n (let ((?x16001 (bvadd unconstrained_ret_mbrtowc_846_64 unconstrained_ret_mbrtowc_901_64)))\n (let ((?x8327 (bvadd ?x16001 unconstrained_ret_mbrtowc_968_64)))\n (let ((?x45483 (bvadd ?x8327 (_ bv576460752303357898 64))))\n (and (distinct ?x45483 (_ bv576460752303357896 64)) true)))))\n(assert\n (let ((?x16001 (bvadd unconstrained_ret_mbrtowc_846_64 unconstrained_ret_mbrtowc_901_64)))\n (let ((?x8327 (bvadd ?x16001 unconstrained_ret_mbrtowc_968_64)))\n (let ((?x45483 (bvadd ?x8327 (_ bv576460752303357898 64))))\n (and (distinct ?x45483 (_ bv576460752303357897 64)) true)))))\n(assert\n (let ((?x16001 (bvadd unconstrained_ret_mbrtowc_846_64 unconstrained_ret_mbrtowc_901_64)))\n (let ((?x8327 (bvadd ?x16001 unconstrained_ret_mbrtowc_968_64)))\n (let ((?x45483 (bvadd ?x8327 (_ bv576460752303357898 64))))\n (and (distinct ?x45483 (_ bv576460752303357900 64)) true)))))\n(assert\n (let ((?x16001 (bvadd unconstrained_ret_mbrtowc_846_64 unconstrained_ret_mbrtowc_901_64)))\n (let ((?x8327 (bvadd ?x16001 unconstrained_ret_mbrtowc_968_64)))\n (let ((?x45483 (bvadd ?x8327 (_ bv576460752303357898 64))))\n (and (distinct ?x45483 (_ bv576460752303357901 64)) true)))))\n(assert\n (let ((?x16001 (bvadd unconstrained_ret_mbrtowc_846_64 unconstrained_ret_mbrtowc_901_64)))\n (let ((?x8327 (bvadd ?x16001 unconstrained_ret_mbrtowc_968_64)))\n (let ((?x45483 (bvadd ?x8327 (_ bv576460752303357898 64))))\n (and (distinct ?x45483 (_ bv576460752303357902 64)) true)))))\n(assert\n (let ((?x16001 (bvadd unconstrained_ret_mbrtowc_846_64 unconstrained_ret_mbrtowc_901_64)))\n (let ((?x8327 (bvadd ?x16001 unconstrained_ret_mbrtowc_968_64)))\n (let ((?x45483 (bvadd ?x8327 (_ bv576460752303357898 64))))\n (and (distinct ?x45483 (_ bv576460752303357903 64)) true)))))\n(check-sat)\n",
    "time": 100.00050568580627,
    "stamp": "time.struct_time(tm_year=2020, tm_mon=12, tm_mday=1, tm_hour=17, tm_min=21, tm_sec=22, tm_wday=1, tm_yday=336, tm_isdst=0)",
    "solving_time_dic": {
        "z3": [
            16.853761196136475
        ]
    }
}