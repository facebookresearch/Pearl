{
    "filename": "ln",
    "script": "; benchmark generated from python API\n(set-info :status unknown)\n(declare-fun unconstrained_ret_mbrtowc_8613_64 () (_ BitVec 64))\n(declare-fun sym_argv2_1_16 () (_ BitVec 16))\n(declare-fun strlen_8307_64 () (_ BitVec 64))\n(declare-fun unconstrained_ret_mbrtowc_8471_64 () (_ BitVec 64))\n(declare-fun unconstrained_ret_mbrtowc_8509_64 () (_ BitVec 64))\n(declare-fun unconstrained_ret_mbrtowc_8562_64 () (_ BitVec 64))\n(assert\n (let (($x52720 (= (_ bv0 64) unconstrained_ret_mbrtowc_8613_64)))\n (not $x52720)))\n(assert\n (let (($x147963 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_8613_64)))\n (not $x147963)))\n(assert\n (let (($x36690 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_8613_64)))\n (not $x36690)))\n(assert\n (let ((?x12676 ((_ extract 15 8) sym_argv2_1_16)))\n (let (($x32010 (bvule (_ bv39 8) ?x12676)))\n (let (($x38118 (= (_ bv39 8) ?x12676)))\n (let (($x76517 (or $x38118 $x32010)))\n (let ((?x85334 (ite $x76517 (_ bv0 8) (_ bv255 8))))\n (let (($x135538 (= (_ bv0 8) ?x85334)))\n (let (($x98566 (not $x135538)))\n (let ((?x13481 ((_ extract 13 8) sym_argv2_1_16)))\n (let (($x36682 (bvule ?x13481 (_ bv39 6))))\n (let ((?x70066 ((_ extract 15 14) sym_argv2_1_16)))\n (let (($x44945 (= (_ bv0 2) ?x70066)))\n (let (($x101557 (and $x44945 $x36682)))\n (let ((?x18191 (ite $x101557 (_ bv2 8) (_ bv1 8))))\n (let ((?x101451 (ite $x32010 ?x18191 (_ bv255 8))))\n (let ((?x102145 (ite $x38118 (_ bv0 8) ?x101451)))\n (let (($x85594 (= (_ bv0 8) ?x102145)))\n (let (($x131021 (not $x85594)))\n (or $x131021 $x98566)))))))))))))))))))\n(assert\n (let ((?x43490 ((_ extract 14 8) sym_argv2_1_16)))\n (let (($x51531 (bvule ?x43490 (_ bv126 7))))\n (let (($x127857 (not $x51531)))\n (let ((?x54689 ((_ extract 15 15) sym_argv2_1_16)))\n (let (($x142096 (= (_ bv0 1) ?x54689)))\n (let (($x91422 (not $x142096)))\n (or $x91422 $x127857))))))))\n(assert\n (let ((?x117987 (bvadd (_ bv576460752303357904 64) strlen_8307_64)))\n (let ((?x9724 ((_ extract 7 0) sym_argv2_1_16)))\n (let (($x66993 (= (_ bv0 8) ?x9724)))\n (let ((?x55243 (ite $x66993 (_ bv576460752303357905 64) (_ bv576460752303357906 64))))\n (let ((?x12676 ((_ extract 15 8) sym_argv2_1_16)))\n (let (($x2715 (= (_ bv0 8) ?x12676)))\n (let ((?x12227 (ite $x2715 (_ bv576460752303357904 64) ?x55243)))\n (= ?x12227 ?x117987)))))))))\n(assert\n (let ((?x105671 ((_ extract 15 13) sym_argv2_1_16)))\n (let (($x84652 (= (_ bv5 3) ?x105671)))\n (let (($x126184 (= (_ bv4 3) ?x105671)))\n (let (($x7422 (or $x126184 $x84652)))\n (let (($x78760 (= (_ bv7 3) ?x105671)))\n (let (($x12681 (or $x78760 $x7422)))\n (let (($x142615 (= (_ bv6 3) ?x105671)))\n (let (($x105321 (or $x142615 $x12681)))\n (let (($x108020 (= (_ bv3 3) ?x105671)))\n (or $x108020 $x105321)))))))))))\n(assert\n (let ((?x31066 ((_ extract 12 8) sym_argv2_1_16)))\n (let ((?x85731 (concat (_ bv0 59) ?x31066)))\n (let ((?x77407 (bvashr ?x85731 (_ bv3 64))))\n (let (($x35214 (= (_ bv0 64) ?x77407)))\n (let (($x31992 (= (_ bv3 64) ?x77407)))\n (let (($x49019 (or $x31992 $x35214)))\n (let (($x39046 (= (_ bv1 64) ?x77407)))\n (let (($x116061 (or $x39046 $x49019)))\n (let (($x42659 (= (_ bv2 64) ?x77407)))\n (or $x42659 $x116061)))))))))))\n(assert\n (let (($x5513 (= (_ bv18446744073709551615 64) strlen_8307_64)))\n (not $x5513)))\n(assert\n (bvule (_ bv2 64) strlen_8307_64))\n(assert\n (let ((?x9724 ((_ extract 7 0) sym_argv2_1_16)))\n (let (($x15035 (bvule (_ bv39 8) ?x9724)))\n (let (($x40238 (= (_ bv39 8) ?x9724)))\n (let (($x105760 (or $x40238 $x15035)))\n (let ((?x120515 (ite $x105760 (_ bv0 8) (_ bv255 8))))\n (let (($x14786 (= (_ bv0 8) ?x120515)))\n (let (($x80605 (not $x14786)))\n (let ((?x122792 ((_ extract 5 0) sym_argv2_1_16)))\n (let (($x116900 (bvule ?x122792 (_ bv39 6))))\n (let ((?x136571 ((_ extract 7 6) sym_argv2_1_16)))\n (let (($x115737 (= (_ bv0 2) ?x136571)))\n (let (($x134638 (and $x115737 $x116900)))\n (let ((?x117972 (ite $x134638 (_ bv2 8) (_ bv1 8))))\n (let ((?x25142 (ite $x15035 ?x117972 (_ bv255 8))))\n (let ((?x123646 (ite $x40238 (_ bv0 8) ?x25142)))\n (let (($x139942 (= (_ bv0 8) ?x123646)))\n (let (($x78889 (not $x139942)))\n (or $x78889 $x80605)))))))))))))))))))\n(assert\n (let ((?x3289 ((_ extract 6 0) sym_argv2_1_16)))\n (let (($x130128 (bvule ?x3289 (_ bv126 7))))\n (let (($x29496 (not $x130128)))\n (let ((?x53525 ((_ extract 7 7) sym_argv2_1_16)))\n (let (($x131287 (= (_ bv0 1) ?x53525)))\n (let (($x126928 (not $x131287)))\n (or $x126928 $x29496))))))))\n(assert\n (let (($x105645 (= (_ bv0 64) unconstrained_ret_mbrtowc_8471_64)))\n (not $x105645)))\n(assert\n (let (($x73493 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_8471_64)))\n (not $x73493)))\n(assert\n (let (($x130476 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_8471_64)))\n (not $x130476)))\n(assert\n (let (($x97055 (= (_ bv0 64) unconstrained_ret_mbrtowc_8509_64)))\n (not $x97055)))\n(assert\n (let (($x83836 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_8509_64)))\n (not $x83836)))\n(assert\n (let (($x44807 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_8509_64)))\n (not $x44807)))\n(assert\n (let (($x127881 (= (_ bv0 64) unconstrained_ret_mbrtowc_8562_64)))\n (not $x127881)))\n(assert\n (let (($x79310 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_8562_64)))\n (not $x79310)))\n(assert\n (let (($x122762 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_8562_64)))\n (not $x122762)))\n(assert\n (let ((?x136599 (bvadd (_ bv1 64) unconstrained_ret_mbrtowc_8471_64)))\n (let ((?x30868 (bvadd ?x136599 unconstrained_ret_mbrtowc_8509_64)))\n (let ((?x144991 (bvadd ?x30868 unconstrained_ret_mbrtowc_8562_64)))\n (let ((?x123502 (bvadd ?x144991 unconstrained_ret_mbrtowc_8613_64)))\n (let (($x89038 (bvule strlen_8307_64 ?x123502)))\n (not $x89038)))))))\n(assert\n (let ((?x142942 (bvadd (_ bv576460752303357905 64) unconstrained_ret_mbrtowc_8471_64)))\n (let ((?x94881 (bvadd ?x142942 unconstrained_ret_mbrtowc_8509_64)))\n (let ((?x135368 (bvadd ?x94881 unconstrained_ret_mbrtowc_8562_64)))\n (let ((?x129746 (bvadd ?x135368 unconstrained_ret_mbrtowc_8613_64)))\n (bvule (_ bv576460752303357904 64) ?x129746))))))\n(assert\n (let ((?x142942 (bvadd (_ bv576460752303357905 64) unconstrained_ret_mbrtowc_8471_64)))\n (let ((?x94881 (bvadd ?x142942 unconstrained_ret_mbrtowc_8509_64)))\n (let ((?x135368 (bvadd ?x94881 unconstrained_ret_mbrtowc_8562_64)))\n (let ((?x129746 (bvadd ?x135368 unconstrained_ret_mbrtowc_8613_64)))\n (let ((?x127128 ((_ extract 63 59) ?x129746)))\n (= (_ bv0 5) ?x127128)))))))\n(assert\n (let ((?x121857 ((_ extract 58 0) unconstrained_ret_mbrtowc_8613_64)))\n (let ((?x114817 ((_ extract 58 0) unconstrained_ret_mbrtowc_8562_64)))\n (let ((?x9956 ((_ extract 58 0) unconstrained_ret_mbrtowc_8509_64)))\n (let ((?x135944 (bvadd (bvadd (_ bv576460752303357905 59) ((_ extract 58 0) unconstrained_ret_mbrtowc_8471_64)) ?x9956)))\n (let ((?x94232 (bvadd ?x135944 ?x114817)))\n (let ((?x43965 (bvadd ?x94232 ?x121857)))\n (bvule ?x43965 (_ bv576460752303357905 59)))))))))\n(assert\n (let ((?x145852 (bvadd unconstrained_ret_mbrtowc_8471_64 unconstrained_ret_mbrtowc_8509_64)))\n (let ((?x114085 (bvadd ?x145852 unconstrained_ret_mbrtowc_8562_64)))\n (let ((?x18233 (bvadd ?x114085 unconstrained_ret_mbrtowc_8613_64)))\n (let ((?x44091 (bvadd ?x18233 (_ bv576460752303357905 64))))\n (let (($x16623 (and (distinct (_ bv576460752303357905 64) ?x44091) true)))\n (let (($x76108 (and (distinct (_ bv576460752303357904 64) ?x44091) true)))\n (and $x76108 $x16623))))))))\n(check-sat)\n",
    "time": 100.00036382675171,
    "stamp": "time.struct_time(tm_year=2020, tm_mon=12, tm_mday=2, tm_hour=14, tm_min=25, tm_sec=55, tm_wday=2, tm_yday=337, tm_isdst=0)",
    "solving_time_dic": {
        "z3": [
            10.292034387588501
        ]
    }
}