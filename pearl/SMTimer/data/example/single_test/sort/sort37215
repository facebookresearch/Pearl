{
    "filename": "sort",
    "script": "; benchmark generated from python API\n(set-info :status unknown)\n(declare-fun unconstrained_ret_fread_unlocked_1671_64 () (_ BitVec 64))\n(declare-fun unconstrained_ret_fread_unlocked_2075_64 () (_ BitVec 64))\n(declare-fun unconstrained_ret_fread_unlocked_2256_64 () (_ BitVec 64))\n(declare-fun k!90505900 () Bool)\n(assert\n (let (($x148633 (= unconstrained_ret_fread_unlocked_1671_64 (_ bv7703 64))))\n (not $x148633)))\n(assert\n (let ((?x219114 ((_ extract 5 0) unconstrained_ret_fread_unlocked_1671_64)))\n (let ((?x122535 (bvmul (_ bv63 6) ?x219114)))\n (let ((?x81992 (bvadd (_ bv24 6) ?x122535)))\n (let (($x77676 (bvule ?x81992 (_ bv33 6))))\n (let (($x104988 (not $x77676)))\n (let ((?x147189 (bvmul (_ bv18446744073709551615 64) unconstrained_ret_fread_unlocked_1671_64)))\n (let ((?x80081 (bvadd (_ bv254168 64) ?x147189)))\n (let ((?x44832 ((_ extract 63 6) ?x80081)))\n (let (($x140165 (= ?x44832 (_ bv0 58))))\n (let (($x49583 (not $x140165)))\n (or $x49583 $x104988))))))))))))\n(assert\n (let ((?x147189 (bvmul (_ bv18446744073709551615 64) unconstrained_ret_fread_unlocked_1671_64)))\n (let ((?x143106 (bvadd (_ bv254167 64) ?x147189)))\n (let ((?x59925 (concat (_ bv0 64) ?x143106)))\n (let ((?x95435 (bvudiv ?x59925 (_ bv33 128))))\n (let ((?x72348 ((_ extract 63 0) ?x95435)))\n (= unconstrained_ret_fread_unlocked_2075_64 ?x72348)))))))\n(assert\n (let ((?x3084963 ((_ extract 5 0) unconstrained_ret_fread_unlocked_2075_64)))\n (let ((?x760964 (bvmul (_ bv63 6) ?x3084963)))\n (let ((?x219114 ((_ extract 5 0) unconstrained_ret_fread_unlocked_1671_64)))\n (let ((?x122535 (bvmul (_ bv63 6) ?x219114)))\n (let ((?x775558 (bvadd ?x122535 ?x760964)))\n (let (($x755875 (bvule (bvadd (_ bv56 6) ?x775558) (_ bv33 6))))\n (let (($x1403781 (not $x755875)))\n (let ((?x99914 (bvmul (_ bv18446744073709551615 64) unconstrained_ret_fread_unlocked_2075_64)))\n (let ((?x147189 (bvmul (_ bv18446744073709551615 64) unconstrained_ret_fread_unlocked_1671_64)))\n (let ((?x78191 (bvadd ?x147189 ?x99914)))\n (or (not (= ((_ extract 63 6) (bvadd (_ bv254136 64) ?x78191)) (_ bv0 58))) $x1403781))))))))))))\n(assert\n (let ((?x99914 (bvmul (_ bv18446744073709551615 64) unconstrained_ret_fread_unlocked_2075_64)))\n (let ((?x147189 (bvmul (_ bv18446744073709551615 64) unconstrained_ret_fread_unlocked_1671_64)))\n (let ((?x78191 (bvadd ?x147189 ?x99914)))\n (let (($x3350798 (= unconstrained_ret_fread_unlocked_2256_64 ((_ extract 63 0) (bvudiv (concat (_ bv0 64) (bvadd (_ bv254135 64) ?x78191)) (_ bv33 128))))))\n (not $x3350798))))))\n(assert\n (let ((?x1777311 ((_ extract 5 0) unconstrained_ret_fread_unlocked_2256_64)))\n (let ((?x1398270 (bvmul (_ bv63 6) ?x1777311)))\n (let ((?x3084963 ((_ extract 5 0) unconstrained_ret_fread_unlocked_2075_64)))\n (let ((?x760964 (bvmul (_ bv63 6) ?x3084963)))\n (let ((?x219114 ((_ extract 5 0) unconstrained_ret_fread_unlocked_1671_64)))\n (let ((?x122535 (bvmul (_ bv63 6) ?x219114)))\n (let ((?x775558 (bvadd ?x122535 ?x760964)))\n (let ((?x82630 (bvmul (_ bv18446744073709551615 64) unconstrained_ret_fread_unlocked_2256_64)))\n (let ((?x99914 (bvmul (_ bv18446744073709551615 64) unconstrained_ret_fread_unlocked_2075_64)))\n (let ((?x147189 (bvmul (_ bv18446744073709551615 64) unconstrained_ret_fread_unlocked_1671_64)))\n (let ((?x78191 (bvadd ?x147189 ?x99914)))\n (or (not (= ((_ extract 63 6) (bvadd (_ bv254104 64) (bvadd ?x78191 ?x82630))) (_ bv0 58))) (not (bvule (bvadd (_ bv24 6) (bvadd ?x775558 ?x1398270)) (_ bv33 6))))))))))))))))\n(assert\n k!90505900)\n(check-sat)\n",
    "time": 1.3191757202148438,
    "stamp": "time.struct_time(tm_year=2020, tm_mon=12, tm_mday=13, tm_hour=6, tm_min=26, tm_sec=31, tm_wday=6, tm_yday=348, tm_isdst=0)",
    "solving_time_dic": {
        "z3": [
            0.3335578441619873
        ]
    }
}